!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/platform-browser")):"function"==typeof define&&define.amd?define("ngx-lazy-loading-images",["exports","@angular/core","@angular/platform-browser"],t):t(e["ngx-lazy-loading-images"]={},e.ng.core,e.ng.platformBrowser)}(this,function(e,t,n){"use strict";var i=function(){function e(){}return e.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[]},e.ngInjectableDef=t.defineInjectable({factory:function(){return new e},token:e,providedIn:"root"}),e}(),r=function(){return(r=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++)for(var r in t=arguments[n])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e}).apply(this,arguments)},o=function(){function e(){this.alt="Lazy Loaded Image",this.defaultConfig={rootMargin:"0px 0px"},this.config=this.defaultConfig,this.visibilityHidden={visibility:"hidden"}}return e.prototype.ngOnInit=function(){this.initPlaceholder(),this.height=this.height||0,this.width=this.width||0},e.prototype.ngAfterViewInit=function(){this.observer=this.initIntersectionObserver(),this.observer.observe(this.lazyImageEl.nativeElement)},e.prototype.initIntersectionObserver=function(){var t=this;return new IntersectionObserver(function(e){t.onIntersection(e)},r({},this.config))},e.prototype.onIntersection=function(e,t){var n=this;e.forEach(function(e){n.imageLoader(e)})},e.prototype.imageLoader=function(e){var t=this,n=e.isIntersecting,i=e.target;try{var r=new Image;if(!this.src)return void console.error("Lazy image element returned empty image source",i);n&&this.fetchImageMeta(r,this.src).then(function(){t.height=t.height||r.height,t.width=t.width||r.width,t.lazyImageEl.nativeElement.src=r.src,t.isImgLoaded=!0,t.observer.disconnect()})["catch"](function(e){console.error("Fetching image meta data failed with "+i,e)})}catch(o){console.error("Image loader failed with "+i,o)}},e.prototype.fetchImageMeta=function(n,i){return new Promise(function(e,t){n.src=i,n.onload=e,n.onerror=t})},e.prototype.initPlaceholder=function(){this.defaultPlaceholder={position:"relative",width:"100%",height:"100%","background-color":"#3A6073",background:this.placeholder?this.placeholder:"linear-gradient(to right, #3A6073, #16222A)","-webkit-filter":"blur(5px)","-o-filter":"blur(5px)",filter:"blur(5px)"}},e.decorators=[{type:t.Component,args:[{selector:"ngx-lazy-images",template:'<div>\n  <div [style.width]="width + \'px\'" [style.height]="height + \'px\'" [ngStyle]="isImgLoaded ? null : defaultPlaceholder">\n    <img\n      #lazyImage\n      [alt]="alt"\n      [height]="height"\n      [width]="width"\n      [ngStyle]="isImgLoaded ? null : visibilityHidden"\n    />\n  </div>\n</div>\n'}]}],e.ctorParameters=function(){return[]},e.propDecorators={lazyImageEl:[{type:t.ViewChild,args:["lazyImage"]}],height:[{type:t.Input}],width:[{type:t.Input}],src:[{type:t.Input}],alt:[{type:t.Input}],placeholder:[{type:t.Input}],config:[{type:t.Input}]},e}(),a=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{declarations:[o],imports:[n.BrowserModule],exports:[o]}]}],e}();e.NgxLazyImagesService=i,e.NgxLazyImagesComponent=o,e.NgxLazyImagesModule=a,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-lazy-loading-images.umd.min.js.map